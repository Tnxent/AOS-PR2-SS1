# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.cliente_links import ClienteLinks  # noqa: F401,E501
import re  # noqa: F401,E501
from swagger_server import util


class Cliente(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_cliente: int=None, nifnie: str=None, nombre: str=None, apellidos: str=None, telefono: str=None, domicilio: str=None, email: str=None, links: ClienteLinks=None):  # noqa: E501
        """Cliente - a model defined in Swagger

        :param id_cliente: The id_cliente of this Cliente.  # noqa: E501
        :type id_cliente: int
        :param nifnie: The nifnie of this Cliente.  # noqa: E501
        :type nifnie: str
        :param nombre: The nombre of this Cliente.  # noqa: E501
        :type nombre: str
        :param apellidos: The apellidos of this Cliente.  # noqa: E501
        :type apellidos: str
        :param telefono: The telefono of this Cliente.  # noqa: E501
        :type telefono: str
        :param domicilio: The domicilio of this Cliente.  # noqa: E501
        :type domicilio: str
        :param email: The email of this Cliente.  # noqa: E501
        :type email: str
        :param links: The links of this Cliente.  # noqa: E501
        :type links: ClienteLinks
        """
        self.swagger_types = {
            'id_cliente': int,
            'nifnie': str,
            'nombre': str,
            'apellidos': str,
            'telefono': str,
            'domicilio': str,
            'email': str,
            'links': ClienteLinks
        }

        self.attribute_map = {
            'id_cliente': 'idCliente',
            'nifnie': 'nif/nie',
            'nombre': 'nombre',
            'apellidos': 'apellidos',
            'telefono': 'telefono',
            'domicilio': 'domicilio',
            'email': 'email',
            'links': 'links'
        }
        self._id_cliente = id_cliente
        self._nifnie = nifnie
        self._nombre = nombre
        self._apellidos = apellidos
        self._telefono = telefono
        self._domicilio = domicilio
        self._email = email
        self._links = links

    @classmethod
    def from_dict(cls, dikt) -> 'Cliente':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cliente of this Cliente.  # noqa: E501
        :rtype: Cliente
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_cliente(self) -> int:
        """Gets the id_cliente of this Cliente.

        Id cliente  # noqa: E501

        :return: The id_cliente of this Cliente.
        :rtype: int
        """
        return self._id_cliente

    @id_cliente.setter
    def id_cliente(self, id_cliente: int):
        """Sets the id_cliente of this Cliente.

        Id cliente  # noqa: E501

        :param id_cliente: The id_cliente of this Cliente.
        :type id_cliente: int
        """

        self._id_cliente = id_cliente

    @property
    def nifnie(self) -> str:
        """Gets the nifnie of this Cliente.

        Documento de identificación del cliente  # noqa: E501

        :return: The nifnie of this Cliente.
        :rtype: str
        """
        return self._nifnie

    @nifnie.setter
    def nifnie(self, nifnie: str):
        """Sets the nifnie of this Cliente.

        Documento de identificación del cliente  # noqa: E501

        :param nifnie: The nifnie of this Cliente.
        :type nifnie: str
        """

        self._nifnie = nifnie

    @property
    def nombre(self) -> str:
        """Gets the nombre of this Cliente.

        Nombre del cliente  # noqa: E501

        :return: The nombre of this Cliente.
        :rtype: str
        """
        return self._nombre

    @nombre.setter
    def nombre(self, nombre: str):
        """Sets the nombre of this Cliente.

        Nombre del cliente  # noqa: E501

        :param nombre: The nombre of this Cliente.
        :type nombre: str
        """

        self._nombre = nombre

    @property
    def apellidos(self) -> str:
        """Gets the apellidos of this Cliente.

        Apellidos del cliente  # noqa: E501

        :return: The apellidos of this Cliente.
        :rtype: str
        """
        return self._apellidos

    @apellidos.setter
    def apellidos(self, apellidos: str):
        """Sets the apellidos of this Cliente.

        Apellidos del cliente  # noqa: E501

        :param apellidos: The apellidos of this Cliente.
        :type apellidos: str
        """

        self._apellidos = apellidos

    @property
    def telefono(self) -> str:
        """Gets the telefono of this Cliente.

        Número de teléfono del cliente  # noqa: E501

        :return: The telefono of this Cliente.
        :rtype: str
        """
        return self._telefono

    @telefono.setter
    def telefono(self, telefono: str):
        """Sets the telefono of this Cliente.

        Número de teléfono del cliente  # noqa: E501

        :param telefono: The telefono of this Cliente.
        :type telefono: str
        """

        self._telefono = telefono

    @property
    def domicilio(self) -> str:
        """Gets the domicilio of this Cliente.

        Dirección del cliente  # noqa: E501

        :return: The domicilio of this Cliente.
        :rtype: str
        """
        return self._domicilio

    @domicilio.setter
    def domicilio(self, domicilio: str):
        """Sets the domicilio of this Cliente.

        Dirección del cliente  # noqa: E501

        :param domicilio: The domicilio of this Cliente.
        :type domicilio: str
        """

        self._domicilio = domicilio

    @property
    def email(self) -> str:
        """Gets the email of this Cliente.

        Correo electrónico del cliente  # noqa: E501

        :return: The email of this Cliente.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Cliente.

        Correo electrónico del cliente  # noqa: E501

        :param email: The email of this Cliente.
        :type email: str
        """

        self._email = email

    @property
    def links(self) -> ClienteLinks:
        """Gets the links of this Cliente.


        :return: The links of this Cliente.
        :rtype: ClienteLinks
        """
        return self._links

    @links.setter
    def links(self, links: ClienteLinks):
        """Sets the links of this Cliente.


        :param links: The links of this Cliente.
        :type links: ClienteLinks
        """

        self._links = links
