openapi: 3.0.2
info:
  title: "\\U0001F37D️API clientes: especificación de la API para la gestión de cliente"
  description: "[UPM] AOS: API para la gestión de clientes"
  contact:
    name: AOS-Grupo6
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
- url: http://127.0.0.1:80
  description: Servidor local
tags:
- name: Clientes
  description: Gestión de clientes del taller
paths:
  /clientes:
    get:
      tags:
      - Clientes
      summary: Obtiene una lista de todos los clientes del taller
      operationId: upm_aos_clientes_cget
      responses:
        "200":
          description: Array de clientes
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                clientesExamples:
                  $ref: '#/components/examples/Clientes'
        "404":
          description: "`NOT FOUND`: recurso no disponible"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-404:
                  $ref: '#/components/examples/response-http-404'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
    post:
      tags:
      - Clientes
      summary: Registrar un cliente
      description: Registra un nuevo cliente y lo almacena en la base de datos
      operationId: upm_aos_clientes_post
      requestBody:
        $ref: '#/components/requestBodies/clienteRB'
      responses:
        "201":
          description: cliente registrado
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "422":
          description: "`UNPROCESSABLE ENTITY`: falta algún dato necesario"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-422:
                  $ref: '#/components/examples/response-http-422'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
    options:
      tags:
      - Clientes
      summary: Proporciona la lista de los métodos HTTP soportados.
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados.
      operationId: upm_aos_clientes_coptions
      responses:
        "204":
          description: cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
  /clientes/{idCliente}:
    get:
      tags:
      - Clientes
      summary: Recupera un cliente concreto identificado por su ID.
      description: Devuelve el cliente identificado por `idCliente`.
      operationId: upm_aos_clientes_get
      parameters:
      - name: idCliente
        in: path
        description: ID del cliente
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^\d+$
          type: integer
      responses:
        "200":
          description: Cliente
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "404":
          description: "`NOT FOUND`: recurso no disponible"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-404:
                  $ref: '#/components/examples/response-http-404'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
    put:
      tags:
      - Clientes
      summary: Modifica los dados de un cliente cocreto.
      description: Actualiza los datos de un cliente identificado por `idCliente`.
      operationId: upm_aos_clientes_put
      parameters:
      - name: idCliente
        in: path
        description: ID del cliente
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^\d+$
          type: integer
      - name: If_Match
        in: header
        description: ETag del recurso que se desea modificar
        required: true
        style: simple
        explode: false
        schema:
          pattern: "[0-9a-f]*"
          type: string
      requestBody:
        $ref: '#/components/requestBodies/clienteRB'
      responses:
        "200":
          description: "`OK`: los datos del cliente ha sido modificado"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "404":
          description: "`NOT FOUND`: recurso no disponible"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-404:
                  $ref: '#/components/examples/response-http-404'
        "412":
          description: "`PRECONDITION FAILED`: no se cumple alguna condición previa"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-412:
                  $ref: '#/components/examples/response-http-412'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
    options:
      tags:
      - Clientes
      summary: Provides the list of HTTP supported methods.
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados.
      operationId: upm_aos_clientes_id
      parameters:
      - name: idCliente
        in: path
        description: ID del cliente
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^\d+$
          type: integer
      responses:
        "204":
          description: cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;
          headers:
            Allow:
              $ref: '#/components/headers/Allow'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
  /clientes/nifnie/{nifnie}:
    get:
      tags:
      - Clientes
      summary: Recupera un cliente concreto identificado por su NIF o NIE.
      description: Devuelve el cliente identificado por `nif/nie`.
      operationId: upm_aos_clientes_get_by_nifnie
      parameters:
      - name: nifnie
        in: path
        description: El NIE o NIF del cliente
        required: true
        style: simple
        explode: false
        schema:
          pattern: "((([X-Z])|([LM])){1}([-]?)((\\d){7})([-]?)([A-Z]{1}))|((\\d{8})([-]?)([A-Z]))"
          type: string
      responses:
        "200":
          description: Cliente
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "404":
          description: "`NOT FOUND`: recurso no disponible"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-404:
                  $ref: '#/components/examples/response-http-404'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
  /clientes/nombre/{nombre}:
    get:
      tags:
      - Clientes
      summary: Obtiene una lista de aquellos clientes cuyo nombre coincida con el
        nombre solicitado.
      description: Devuelve el cliente identificado por `nombre`.
      operationId: upm_aos_clientes_get_by_nombre
      parameters:
      - name: nombre
        in: path
        description: El nombre del cliente
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Array de clientes
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                clientesExamples:
                  $ref: '#/components/examples/Clientes'
        "404":
          description: "`NOT FOUND`: recurso no disponible"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HTTP_Problem'
              examples:
                response-http-404:
                  $ref: '#/components/examples/response-http-404'
      x-openapi-router-controller: swagger_server.controllers.clientes_controller
components:
  schemas:
    Cliente:
      type: object
      properties:
        idCliente:
          type: integer
          description: Id cliente
          format: int64
        nif/nie:
          pattern: "((([X-Z])|([LM])){1}([-]?)((\\d){7})([-]?)([A-Z]{1}))|((\\d{8})([-]?)([A-Z]))"
          type: string
          description: Documento de identificación del cliente
        nombre:
          type: string
          description: Nombre del cliente
        apellidos:
          type: string
          description: Apellidos del cliente
        telefono:
          pattern: "(?:6[0-9]|7[1-9])[0-9]{7}$"
          type: string
          description: Número de teléfono del cliente
        domicilio:
          type: string
          description: Dirección del cliente
        email:
          type: string
          description: Correo electrónico del cliente
          format: email
        links:
          $ref: '#/components/schemas/Cliente_links'
      description: cliente registrado
      example:
        idCliente: 2021
        nif/nie: 28536492-F
        nombre: José Luis
        apellidos: Sánchez
        telefono: 625334828
        domicilio: "C/Concordia, 5, 7ºa"
        email: jlsanchez@123.com
        links:
          parent:
            href: /clientes
            rel: listaClientes
          self:
            href: /clientes/2021
            rel: modificar
    HTTP_Problem:
      type: object
      properties:
        type:
          type: string
          description: "A URI reference [RFC3986] that identifies the problem type"
          format: uri
        title:
          type: string
          description: short human-readable summary of the problem type
        status:
          type: number
          description: HTTP status code
        detail:
          type: string
          description: human-readable explanation specific to this occurrence of the
            problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem.  It may or may not yield further information if dereferenced
          format: uri
      description: Problem Details for HTTP APIs
      externalDocs:
        url: https://tools.ietf.org/html/rfc7807
    inline_response_200:
      type: object
      properties:
        clientes:
          type: array
          description: array de clientes
          items:
            $ref: '#/components/schemas/Cliente'
      example:
        clientes:
        - idCliente: 2021
          nif/nie: 28536492-F
          nombre: José Luis
          apellidos: Sánchez
          telefono: 625334828
          domicilio: "C/Concordia, 5, 7ºa"
          email: jlsanchez@123.com
          links:
            parent:
              href: /clientes
              rel: listaClientes
            self:
              href: /clientes/2021
              rel: modificar
        - idCliente: 2021
          nif/nie: 28536492-F
          nombre: José Luis
          apellidos: Sánchez
          telefono: 625334828
          domicilio: "C/Concordia, 5, 7ºa"
          email: jlsanchez@123.com
          links:
            parent:
              href: /clientes
              rel: listaClientes
            self:
              href: /clientes/2021
              rel: modificar
    Cliente_links_parent:
      type: object
      properties:
        href:
          type: string
          description: URL del enlace
          format: url
          x-faker: internet.url
        rel:
          type: string
          description: Relación del documento enlazado con el actual. Contiene una
            lista de tipos de enlaces separados por espacio.
          x-faker: lorem.words
      description: Enlace de relación
    Cliente_links:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/Cliente_links_parent'
        self:
          $ref: '#/components/schemas/Cliente_links_parent'
      description: Enlaces de relación
  responses:
    Response_404:
      description: "`NOT FOUND`: recurso no disponible"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-404'
    Response_412:
      description: "`PRECONDITION FAILED`: no se cumple alguna condición previa"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-412:
              $ref: '#/components/examples/response-http-412'
    Response_422:
      description: "`UNPROCESSABLE ENTITY`: falta algún dato necesario"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-422:
              $ref: '#/components/examples/response-http-422'
  parameters:
    idCliente:
      name: idCliente
      in: path
      description: ID del cliente
      required: true
      style: simple
      explode: false
      schema:
        pattern: ^\d+$
        type: integer
    nifnie:
      name: nifnie
      in: path
      description: El NIE o NIF del cliente
      required: true
      style: simple
      explode: false
      schema:
        pattern: "((([X-Z])|([LM])){1}([-]?)((\\d){7})([-]?)([A-Z]{1}))|((\\d{8})([-]?)([A-Z]))"
        type: string
    nombre:
      name: nombre
      in: path
      description: El nombre del cliente
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ifMatchParam:
      name: If_Match
      in: header
      description: ETag del recurso que se desea modificar
      required: true
      style: simple
      explode: false
      schema:
        pattern: "[0-9a-f]*"
        type: string
  examples:
    Clientes:
      value:
      - idCliente: 2021
        nif/nie: 28536492-F
        nombre: José Luis
        apellidos: Sánchez
        telefono: 625334828
        domicilio: "C/Concordia, 5, 7ºa"
        email: jlsanchez@123.com
        links:
          parent:
            href: /clientes
            rel: listaClientes
          self:
            href: /clientes/2021
            rel: modificar
      - idCliente: 5069
        nif/nie: X-3310872-V
        nombre: Ming
        apellidos: Yao
        telefono: 625456189
        domicilio: "Av del Mediterráneo, 99"
        email: ym2008@coolmail.com
        links:
          parent:
            href: /clientes
            rel: listaClientes
          self:
            href: /clientes/5069
            rel: modificar
    response-http-404:
      value:
        type: https://httpstatuses.com/404
        title: NOT FOUND
        status: 404
        detail: El recurso solicitado no está disponible...
        instance: about:blank
    response-http-412:
      value:
        type: https://httpstatuses.com/412
        title: PRECONDITION FAILED
        status: 412
        detail: No se cumple alguna condición previa...
        instance: about:blank
    response-http-422:
      value:
        type: https://httpstatuses.com/422
        title: UNPROCESSABLE ENTITY
        status: 422
        detail: Falta algún dato necesario...
        instance: about:blank
  requestBodies:
    clienteRB:
      description: '`Cliente` data'
      content:
        application/json:
          schema:
            required:
            - apellidos
            - domicilio
            - email
            - nif/nie
            - nombre
            - telefono
            type: object
            properties:
              nif/nie:
                pattern: "((([X-Z])|([LM])){1}([-]?)((\\d){7})([-]?)([A-Z]{1}))|((\\\
                  d{8})([-]?)([A-Z]))"
                type: string
                description: Documento de identificación del cliente
              nombre:
                type: string
                description: Nombre del cliente
              apellidos:
                type: string
                description: Apellidos del cliente
              telefono:
                pattern: "(?:6[0-9]|7[1-9])[0-9]{7}$"
                type: string
                description: Número de teléfono del cliente
              domicilio:
                type: string
                description: Dirección del cliente
              email:
                type: string
                description: Correo electrónico del cliente
                format: email
            example:
              nif/nie: 28536492-F
              nombre: José Luis
              apellidos: Sánchez
              telefono: 625334828
              domicilio: "C/Concordia, 5, 7ºa"
              email: jlsanchez@123.com
      required: true
  headers:
    ETag:
      description: Entity Tag (identificador único proporcionado para validación de
        caché)
      style: simple
      explode: false
      schema:
        pattern: "[0-9a-f]*"
        type: string
        example: 24f21ae791234aeb
        x-faker: random.uuid
    Location:
      description: '`URI` del nuevo recurso'
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: clientes/133
        x-faker: internet.url
    Allow:
      description: Lista de métodos HTTP soportados
      style: simple
      explode: false
      schema:
        type: string
      example: "GET, PUT, OPTIONS"

